name: CI
on:
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

env:
    BUNDLE_PATH: /tmp/.bundle
    GEM_HOME: /tmp/.bundle
    GEM_PATH: /tmp/.bundle
    TERM: xterm256
    SCCACHE_DIR: /tmp/sccache
    RUSTC_WRAPPER: sccache

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true
          profile: minimal
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.63.0
          components: clippy
          override: true
          profile: minimal
      - run: cargo clippy --all --all-features -- -D warnings

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: |
          sudo apt-get install -y shellcheck
          ./script/lints/lint_fixtures.sh
          ./script/lints/lint_scripts.sh

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.63.0
        override: true
        profile: minimal
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-2-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions/cache@v2
      with:
        path: |
          /tmp/sccache
        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions/cache@v2
      with:
        path: |
          librubyfmt/ruby_checkout
        key: ${{ runner.os }}-ruby-v1-${{ hashFiles('.git/modules/librubyfmt/ruby_checkout/HEAD') }}
    - if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y build-essential ruby-dev bison

        SCCACHE_VERSION=0.2.15
        SCCACHE_FILE=sccache-v$SCCACHE_VERSION-x86_64-unknown-linux-musl
        mkdir -p $HOME/.local/bin
        curl -L "https://github.com/mozilla/sccache/releases/download/v$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
        chmod +x $SCCACHE_FILE/sccache
        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - if: runner.os == 'macOS'
      run: |
        brew install sccache automake
    - run: ./script/test.sh
